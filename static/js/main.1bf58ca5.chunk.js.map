{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","length","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","aboutText","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAIe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAAI,QAAAD,OAAOL,EAAMM,OACzEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAKP,EAAMQ,OAC5CP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBK,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1Lb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAEZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAI,SAE9DN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAShBH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAAgD,UAAfL,EAAMM,KAAiB,OAAO,UAC3EL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBa,QAASjB,EAAMkB,WAAYT,KAAK,WAAWM,GAAG,2BAClFd,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBe,QAAQ,0BAAyB,uBC1BhE,SAASC,EAASpB,GAC7B,IAuCCqB,EAEuBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GAKtB,OACEtB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0B,SAAA,KACA3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYyB,MAAO,CAACC,MAAsB,SAAf9B,EAAMM,KAAgB,QAAQ,UACpEL,EAAAC,EAAAC,cAAA,UAAKH,EAAM+B,SACX9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAe4B,MAAON,EAAMO,SAfjC,SAACC,GAEpBP,EAAQO,EAAMC,OAAOH,QAayDH,MAAO,CAACO,gBAAgC,SAAfpC,EAAMM,KAAgB,UAAU,QAAQwB,MAAsB,SAAf9B,EAAMM,KAAgB,QAAQ,SAAUS,GAAG,QAAQsB,KAAK,OAE9MpC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4Ba,QArD5B,WAElB,IAAIqB,EAAUZ,EAAKa,cACnBZ,EAAQW,GACRtC,EAAMwC,UAAU,yBAAyB,aAiD6B,wBACtEvC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4Ba,QA9C5B,WAElB,IAAIqB,EAAUZ,EAAKe,cACnBd,EAAQW,GACRtC,EAAMwC,UAAU,yBAAyB,aA0C6B,wBACtEvC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4Ba,QAvCzB,WAErBU,EADc,IAEd3B,EAAMwC,UAAU,qBAAqB,aAoCoC,cACzEvC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4Ba,QAjC/B,WACfyB,UAAUC,UAAUC,UAAUlB,GAC9B1B,EAAMwC,UAAU,iBAAiB,aA+BkC,aACnEvC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4Ba,QA5BxB,WACtB,IAAIqB,EAAUZ,EAAKmB,MAAM,QACzBlB,EAAQW,EAAQQ,KAAK,MACrB9C,EAAMwC,UAAU,uBAAuB,aAyBmC,sBAG9EvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAkByB,MAAO,CAACC,MAAsB,SAAf9B,EAAMM,KAAgB,QAAQ,UAC1EL,EAAAC,EAAAC,cAAA,UAAI,qBAEJF,EAAAC,EAAAC,cAAA,SAAIuB,EAAKmB,MAAM,OAAOE,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQC,SAAaA,OAAO,cAAYvB,EAAKuB,OAAO,eACpGhD,EAAAC,EAAAC,cAAA,SAAI,KAAQuB,EAAKmB,MAAM,OAAOE,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQC,SAAaA,OAAO,oBACpFhD,EAAAC,EAAAC,cAAA,UAAI,WACJF,EAAAC,EAAAC,cAAA,SAAIuB,EAAKuB,OAAO,EAAEvB,EAAK,wCCtDhBwB,MAff,SAAelD,GAKb,OACEC,EAAAC,EAAAC,cAAA,OAAK0B,MAAO,CAACsB,OAAO,SACjBnD,EAAMoD,OAASnD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAMoD,MAAM3C,KAAI,gCAAgC4C,KAAK,SAClGpD,EAAAC,EAAAC,cAAA,cAPgB,SAACmD,GACjB,IAAMC,EAAQD,EAAKb,cACnB,OAAOc,EAAMC,OAAO,GAAGjB,cAAgBgB,EAAME,MAAM,GAK1CC,CAAW1D,EAAMoD,MAAM3C,MAAM,KAAU,KAAGT,EAAMoD,MAAMO,OC4DxDC,MA7Df,WAAe,IAAAvC,EAESC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlCf,EAAIiB,EAAA,GAAEsC,EAAOtC,EAAA,GAAAuC,EACMxC,mBAAS,MAAKyC,EAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,EAAA,GAAjCV,EAAKW,EAAA,GAAEC,EAAQD,EAAA,GAEhBvB,EAAY,SAACyB,EAASxD,GAC1BuD,EAAS,CACPL,IAAKM,EACLxD,KAAMA,IAERyD,WAAW,WACTF,EAAS,OACR,MAyBH,OACE/D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0B,SAAA,KAYA3B,EAAAC,EAAAC,cAACJ,EAAM,CAACS,MAAM,YAAY2D,UAAU,iBAAiB7D,KAAMA,EAAMY,WAnClD,WACL,UAATZ,GACDuD,EAAQ,QACRO,SAASC,KAAKxC,MAAMO,gBAAkB,UACtCI,EAAU,kBAAkB,WAK5B4B,SAAS5D,MAAQ,yBAKjBqD,EAAQ,SACRO,SAASC,KAAKxC,MAAMO,gBAAkB,QACtCI,EAAU,mBAAmB,WAC7B4B,SAAS5D,MAAQ,4BAmBjBP,EAAAC,EAAAC,cAACmE,EAAK,CAAClB,MAAOA,IACdnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEbH,EAAAC,EAAAC,cAACiB,EAAQ,CAACoB,UAAWA,EAAWT,QAAQ,iBAAiBzB,KAAMA,OCnDtDiE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWjB,SAASkB,eAAe,SACpDC,OACHtF,EAAAC,EAAAC,cAACF,EAAAC,EAAMsF,WAAU,KACfvF,EAAAC,EAAAC,cAACsF,EAAG,QAORlB","file":"static/js/main.1bf58ca5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';// use for routing but not work in git hub\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> use for routing but not work in github*/}\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> use for routing but not work in github*/}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> use for routing but not work in github*/}\r\n            {/* <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a> */}\r\n          </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}> \r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string}\r\n\r\n// Navbar.defaultProps = {title: 'Set title here',\r\n//         aboutText: 'About text here'}","import React, { useState } from 'react'\r\n\r\n// const [count, setCount] = useState(0); //Hooks concept from react course\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpclick = ()=>{\r\n        //console.log(\"uppercase clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to uppercase','success');\r\n\r\n    }\r\n\r\n    const handleLoclick = ()=>{\r\n        //console.log(\"uppercase clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to lowercase','success');\r\n\r\n    }\r\n\r\n    const handleClearclick = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert('Textbox is cleared','success');\r\n\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert('Text is copied','success');\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert('Extra spaces removed','success');\r\n\r\n    }\r\n    \r\n    const handleOnChange = (event)=>{\r\n        //console.log(\"onchange\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    //const [text, setText] = useState('hello');\r\n    //text = \"hhhhh\"; //wrong way to change state\r\n    //setText('New Hello'); // Right way to change state\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode === 'dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'#313e4c':'white',color: props.mode === 'dark'?'white':'black'}} id=\"myBox\" rows=\"7\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpclick}>Convert To Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLoclick}>Convert To Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleClearclick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove ExtraSpace</button>\r\n\r\n    </div>\r\n    <div className='container my-3'  style={{color: props.mode === 'dark'?'white':'black'}}>\r\n        <h3>Your text summary</h3>\r\n        \r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes to read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:'Enter something to preview it here'}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize  = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)} </strong>: {props.alert.msg}\r\n      {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n     </div>}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n//import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\"; // use for routing but not work in github\n\n\nfunction App() {\n\nconst [mode, setMode] = useState('light');\nconst [alert, setAlert] = useState(null);\n\nconst showAlert = (message, type)=>{\n  setAlert({\n    msg: message,\n    type: type\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 2000);\n}\n\nconst toggleMode = ()=>{\n  if(mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#0a2037';\n    showAlert('Dark mode is on','success');\n    // setAlert({\n    //   msg:'Dark',\n    //   type:'success'\n    // })  //you can use this without making showAlert function\n    document.title = 'TextUtils - Darkmode';\n    // setInterval(() => {\n    //   document.title = 'TextUtils - lightout';\n    // }, 1500);\n  }else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert('Light mode is on','success');\n    document.title = 'TextUtils - Lightmode';\n\n  }\n}\n\n  return (\n    <>\n    {/* <Router>\n    <Navbar title=\"TextUtils\" aboutText=\"AboutTextutils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      <Routes>\n          <Route exact path=\"/about\"  element={<About />}></Route>\n          <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text\" mode={mode}/>}></Route>\n      </Routes>\n    </div>\n    </Router> use for routing but not work in github*/} \n\n    <Navbar title=\"TextUtils\" aboutText=\"AboutTextutils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      {/* <About /> */}\n      <TextForm showAlert={showAlert} heading=\"Enter the text\" mode={mode}/>\n    </div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}